# NPK firmware header, used by Mikrotik
0	ubelong	0x1EF1D0BA	NPK package header,
>4	ulelong	<0	{invalid}
>4	ulelong	x	image size: %d,
#>8	uleshort x	part_type: %x, #first NPK parttype
#>10	ulelong x	part_len 0x%x, #first NPK partlen
>8	uleshort 0x12	#first NPK parttype is part_info
>>14	string	x	image name: "%s"
>8	uleshort !0x12	#first NPK parttype not 12 part_info
#>>(10.l+8+2+4) uleshort x	part_type %x, #second NPK parttype
#>>(10.l+8+2+4+2) ulelong x	part_len 0x%x, #second NPK partlen
>>(10.l+8+2+4) uleshort 0x12	#second NPK parttype
#>>>(10.l+8+2+4+2) ulelong x	#second NPK partlen
>>>(10.l+8+2+4+2+4) string x	image name: "%s"
# footer 10 00 01 00 00 00 49

# DPK firmware header, used by Mikrotik
0	ubelong	0xFB0F10A1	NPK package header (hidden, DPK),
>4	ulelong	<0	{invalid}
>4	ulelong	x	image size: %d,
>14	string	x	image name: "%s"
# footer 03 00 00 00 00 00

# Mikrotik cfg
# soft has CRC32, hard does not
0	regex	(draH|tfoS)	Mikrotik CFG header (BE):
>0	ubelong	x	{strlen:4}
>0	string	x	type: {string}%s;
>0	string	tfoS
>>4	ubelong	x	CRC32: "0x%x", #CRC32 (rhash) of whole cfg part, with crc32 bytes zeroed
>>8	ubeshort	>0	first tag: len: 0x%x,
>>8	ubeshort	>0x20	{invalid}
#>>>8	ubeshort	>0	{strlen:%d}
>>>10	ubeshort	>0	id: 0x%x
#>>>12	string	x	tag_value: {string}%b
>0	string	draH
>>4	ubeshort	>0	first tag: len: 0x%x,
>>4	ubeshort	>0x50	{invalid}
>>6	ubeshort	>0	id: 0x%x
#>>4	ubeshort	>0	{strlen:%d}
#>>>8	string	x	tag_value: {string}%s

0	regex	(Hard|Soft|DRE\x00)	Mikrotik CFG header (LE):
>0	regex	(Hard|Soft)
>>0	ulelong	x	{strlen:4}
>0	regex	(DRE\x00)
>>0	ulelong	x	{strlen:3}
>0	string	x	type: {string}%s;
>0	string	Soft
>>4	ulelong	>0	CRC32: "0x%x", #CRC32 (rhash) of whole cfg part, with crc32 bytes zeroed
>>8	uleshort	>0	first tag: id: 0x%x
>>8	uleshort	>0x20	{invalid}
>>10	uleshort	>0	(len: 0x%x)
#>>>10	ubeshort	>0	{strlen:%d}
#>>>12	string	x	tag_value: {string}%b
>0	regex (Hard|DRE\x00)
>>4	uleshort	>0	first tag: id: 0x%x
>0	regex (Hard)
>>4	uleshort	>0x50	{invalid}
>>6	uleshort	>0	(len: 0x%x)
#>>6	ubeshort	>0	{strlen:%d}
#>>>8	string	x	tag_value: {string}%s

# Mikrotik FWF file headers (0x20 long)
0	regex	(4qpi|4Npi|0qpi|7qpi|sysM|73AM|461a|NplA|nplA)	Mikrotik ARM FWF header:
# only for LE
>0	ulelong	x	{strlen:4}
>0	string	x	device magic: {string}%s,
>0	string	4qpi	ipq40xx no-nand,
>0	string	4Npi	ipq40xx nand,
>0	string	0qpi	ipq80xx nand,
>0	string	sysM	dx3230 no-nand,
>0	string	NplA	al2,
>4	ulelong	x	CRC32: 0x%x, #CRC32 (rhash) of fwf file (including header), with crc32 bytes zeroed
>4	ulelong <1	{invalid}
>8	ulelong x	FWF size (ex. header): %d,
>8	ulelong <1	{invalid}
>8	ulelong+0x20	x	{size:%d}
>12	string  x	version: "%s"
>0x20	ulelong	x	FWF size (ex. final CRC): %d,
>0x24	ulelong	x	FWF ?uncompressed size: %d,
>(8.l+0x20-4)	ulelong	x	header-less CRC32: 0x%x #CRC32 (rhash) of fwf file, skipping 0x20 header, and this 0x4 CRC32 footer


# Mikrotik FWF file headers (0x20 long)
0	regex	(L559|0559)	Mikrotik MIPS BE FWF header:
# only for BE
>0	ubelong	x	{strlen:4}
>0	string	x	device magic: {string}%s,
>0	string	L559	qca955x no-nand,
>0	string	0559	qca955x nand,
>4	ubelong	x	CRC32: 0x%x, #CRC32 (rhash) of fwf file (including header), with crc32 bytes zeroed dd if=/dev/zero of=qca9550L-6.45.8.fwf seek=4 count=4 bs=1 conv=notrunc
>4	ubelong <1	{invalid}
>8	ubelong x	FWF size (ex. header): %d,
>8	ubelong <1	{invalid}
>8	ubelong+0x20	x	{size:%d}
>12	string  x	version: "%s"
>0x40	ubelong	x	FWF size (ex. final CRC): %d,
>0x44	ubelong	x	hardcfg_ptr: 0x%x
>0x48	ubelong	x	(len: 0x%x),
>0x4c	ubelong	x	bootloader2_ptr: 0x%x,
>0x50	ubelong	x	softcfg_ptr: 0x%x
>0x54	ubelong	x	(len: 0x%x)
>(8.L+0x20-4)	ulelong	x	header-less CRC32: 0x%x #CRC32 (rhash) of fwf file, skipping 0x20 header, and this 0x4 CRC32 footer

# Mikrotik NPK file-container
0	string \x78\x01\x00\x00\x80\xff\x7f	NPK section file-container header,
>0	uleshort	0x0178
>2	ubyte		0
>>3	uleshort	0x8000
>>>5	uleshort	0x7fff
>>>7	uleshort	=0x81a4			objtype file,
>>>7	uleshort	=0x81ed			objtype ELF file,
>>>7	ubyte		=0x41ed			objtype dir,
>>>9	ulong		0
>>>0xd	ushort		0
>>>0xf	uleshort	x			unknown1: 0x%x,
#>>>0x11	byte		x	{strlen:8}
#>>>0x11	string		x	objsep: {string}%s,
>>>0x11	ulequad		x	objsep: 0x%x,
>>>0x19	uleshort	x	%x, #repeated 0x11 0x12
>>>0x1b	ulong		0
>>>0x1f	ulelong		x	{size:%d} objlen 0x%d,
>>>0x23	uleshort	x	{strlen:%d} objnamelen 0x%d,
>>>0x25	string		x	{name:%s} objname: {string}%s
>>>0x1f	ulelong		<0x8000 size:%d
>>>>(0x1f.l)+(0x23.s)+0x25 uleshort x	next obj: type 0x%x,
>>>>(0x1f.l)+(0x23.s)+0x25+0x18 ulelong	x	len 0x%x,
>>>>(0x1f.l)+(0x23.s)+0x25+0x18+4 uleshort	x	{strlen:%d}
>>>>(0x1f.l)+(0x23.s)+0x25+0x18+4+2 string	x	name: {string}%s
>>>0x1f	ulelong		>0x8000
>>>>(0x1f.l)+(0x23.s)+0x25+5 uleshort x	next objtype 0x%x
>>>>(0x1f.l)+(0x23.s)+0x25+5+0x18 ulelong	x	next objlen 0x%x
>>>>(0x1f.l)+(0x23.s)+0x25+5+0x18+4 uleshort	x	%x
>>>>(0x1f.l)+(0x23.s)+0x25+5+0x18+4 uleshort	x	{strlen:%d}
>>>>(0x1f.l)+(0x23.s)+0x25+5+0x18+4+2 string	x	name: {string}%s

# Mikrotik file-contained chunk mark
#0	string \x00\x00\x80\xff\x7f	NPK section file-container chunk mark
